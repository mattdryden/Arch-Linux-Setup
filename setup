#!/bin/bash

# Setup
PRIMARY_DISK="/dev/sda";
BASE="base base-devel linux linux-firmware btrfs-progs dhcpcd netctl dialog wpa_supplicant intel-ucode grub efibootmgr git"

# Chroot
USER="matt"
HOSTNAME="Odyssey"
SOFTWARE_ADD=""

function partitionDisk {
  echo "Partitioning disk $PRIMARY_DISK..."
  echo "Create 1st partition 512MB /efi. 2nd for the rest."
  #fdisk $PRIMARY_DISK
  parted -s "${PRIMARY_DISK}" mklabel gpt
  parted -s -a optimal "${PRIMARY_DISK}" mkpart primary fat32 0% 512M
  parted -s -a optimal "${PRIMARY_DISK}" mkpart primary btrfs 512M 100%
  echo "Formatting boot disk..."
  mkfs.fat -F32 ${PRIMARY_DISK}1
  echo "Formtting encrypted partition as BTRFS"
  mkfs.btrfs -f ${PRIMARY_DISK}2
}

function createSubvols {
  echo "Creating subvolumes to install..."
  mount ${PRIMARY_DISK}2 /mnt
  cd /mnt
  btrfs sub create @root
  btrfs sub create @home
  cd /
  umount /mnt
}

function mountSubvols {
  echo "Mounting subvolumes for install..."
  mount ${PRIMARY_DISK}2 -o subvol=@root /mnt
  mkdir /mnt/efi
  mkdir /mnt/home
  mount ${PRIMARY_DISK}2 -o subvol=@home /mnt/home
  mount ${PRIMARY_DISK}1 /mnt/efi
}

function setupWifi {
  echo "Connecting to wifi..."
  wifi-menu
  systemctl dhcpcd disable
}

function installBootstrap {
  echo "Pacstrapping system..."
  pacman -Syy
  pacstrap /mnt $BASE
}

function enterChroot {
  echo "Chrooting into install..."
  genfstab -p /mnt >> /mnt/etc/fstab
  # cp -a /root/chroot /mnt/root/chroot
  cp "$0" /mnt/setup.sh
  arch-chroot /mnt bash -c "./setup.sh chroot"
}

function makeFreshSnapshot {
  echo "Making snapshot of fresh installation..."
  mkdir /mnt/tmp
  mount ${PRIMARY_DISK}2 /mnt/tmp
  cd /mnt/tmp
  btrfs subvol snap -r @root @root_initial
  btrfs subvol snap -r @home @home_initial
  cd /
  umount /mnt/tmp
}

function unmountAndReboot {
  echo "Finished installing... Now rebooting..."
  cd /
  umount /mnt/efi
  umount /mnt/home
  umount /mnt
  reboot
}

function setLocales {
  echo "Setting locale"
  sed -i -e 's/#en_GB.UTF-8 UTF-8/en_GB.UTF-8 UTF-8/g' /etc/locale.gen
  #sed -i -e 's/#en_GB.ISO-8859-1/en_GB.ISO-8859-1/g' /etc/locale.gen
  locale-gen
  echo -e "LANG=en_GB.UTF-8" > /etc/locale.conf
  echo -e "KEYMAP=uk" > /etc/vconsole.conf
}

function setTimezone {
  echo "Setting local timezone..."
  rm -rf /etc/localtime
  ln -s /usr/share/zoneinfo/Europe/London /etc/localtime
  hwclock --systohc --utc
}


function createUser {
  echo "Creating new user..."
  useradd -m -G wheel,storage,power -s /bin/bash $USER
  echo "${USER}:${PASS}" | chpasswd
}

function setHostname {
  echo "Setting new hostname..."
  echo $HOSTNAME >> etc/hostname
  sed -i '/::1/a 127.0.1.1       ${HOSTNAME}.localdomain     ${HOSTNAME}' /etc/hosts
}

function installSoftware {
  echo "Installing software..."
  pacman -S $SOFTWARE_ADD --noconfirm
}

function mkinit {
  echo "mkinitcpio"
  mkinitcpio -P
}

function installGrub {
  echo "Installing grub..."
  grub-install --target=x86_64-efi --efi-directory=/mnt/efi --bootloader-id=GRUB
  grub-mkconfig -o /boot/grub/grub.cfg
}

function setEnviron {
    echo "Setting environment variables..."
    echo -e "EDITOR=nano" > /etc/environment
    echo -e "$USER ALL=(ALL) ALL" >> /etc/sudoers
}

function installXorg {
    echo "Installing xorg..."
    pacman -Sy xf86-video-vesa xorg-server xorg-xinit xorg-xrandr --noconfirm
}

function installDesktop {
    echo "Installing desktop..."
}

function installYay() {
    echo "Installing yay..."
    git clone http://aur.archlinux.org/yay /yay
    cd /yay
    sudo -u $USER makepkg -si --noconfirm
    rm -rf /yay
}

function install() {
  echo "Installing up..."
  # setupWifi
  partitionDisk
  createSubvols
  mountSubvols
  installBootstrap
  enterChroot
  makeFreshSnapshot
  # unmountAndReboot
}

function setup() {
  echo "Setting up..."
  setLocales
  setTimezone
  setHostname
  createUser
  setEnviron
  installSoftware
  installYay
  installXorg
  mkinit
  installGrub
  rm /setup.sh
}

if [ "$1" = "chroot" ]; then
	setup
else
	install
fi